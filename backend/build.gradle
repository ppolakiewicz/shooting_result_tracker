plugins {
    id 'groovy'
    id 'java'
    id "io.freefair.lombok" version "8.1.0"
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor',
            '-Amapstruct.unmappedTargetPolicy=warn',
            '-Amapstruct.unmappedSourcePolicy=warn'
    ]
}

group = 'com.str'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    testcontainersVersion = '1.17.6'
    mapstructVersion = '1.5.3.Final'
    spockVersion = '2.4-M1-groovy-4.0'
}


dependencies {

    implementation project(':domain')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.flywaydb:flyway-core:9.21.0'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    implementation 'com.auth0:java-jwt:4.3.0'
    implementation 'org.slf4j:slf4j-simple:2.0.5'
    implementation 'org.slf4j:slf4j-api:2.0.5'

    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation "org.spockframework:spock-spring:${spockVersion}"
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.testcontainers:spock:1.18.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
    testImplementation 'org.testcontainers:postgresql:1.18.3'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
